package com.dataloom.integrations.iowacity;

/**
 * @author Matthew Tamayo-Rios &lt;matthew@kryptnostic.com&gt;
 */

import com.dataloom.client.LoomClient;
import com.dataloom.edm.type.Analyzer;
import com.dataloom.edm.type.PropertyType;
import org.apache.olingo.commons.api.edm.EdmPrimitiveTypeKind;
import org.apache.olingo.commons.api.edm.FullQualifiedName;

import java.util.concurrent.ExecutionException;

import com.dataloom.edm.EdmApi;
import com.dataloom.edm.type.Analyzer;
import com.google.common.base.Optional;
import com.google.common.collect.ImmutableSet;

// Uncomment to run integration locally
import com.dataloom.client.RetrofitFactory.Environment;

import static com.dataloom.integrations.iowacity.Nemesis.*;

public class DataIntegration {

    public static void main( String[] args ) throws InterruptedException, ExecutionException {

        String jwtToken = "replace with jwtToken";
        LoomClient loomclient = new LoomClient( Environment.PRODUCTION, () -> jwtToken );
        EdmApi edm = loomclient.getEdmApi();

        // NON PII
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_01,
                "EMS Agency Unique State ID",
                Optional.of(
                        "The unique ID assigned to the EMS Agency which is associated with all state licensure numbers and information." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_02,
                "EMS Agency Number",
                Optional.of( "The state-assigned provider number of the responding agency" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_03,
                "EMS Agency State",
                Optional.of( "The state/territory which assigned the EMS agency number." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_04,
                "EMS Agency Service Area States",
                Optional.of(
                        "The states in which the EMS Agency provides services including the state associated with the EMS Agency Number." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_05,
                "EMS Agency Service Area County(s)",
                Optional.of( "The county(s) within each state for which the agency formally provides service." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_06,
                "EMS Agency Census Tracts",
                Optional.of( "The US census tracts in which the EMS agency formally provides service." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_07,
                "EMS Agency Service Area ZIP Codes",
                Optional.of( "The ZIP codes for the EMS Agency's service area." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_08,
                "Primary Type of Service",
                Optional.of( "The primary service type provided by the agency." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_09,
                "Level of Service",
                Optional.of(
                        "The level of service which the agency provides EMS care for every request for service (the minimum certification level). This may be the license level granted by the state EMS office." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_10,
                "Organization Status",
                Optional.of(
                        "The primary organizational status of the agency. The definition of Volunteer or Non-Volunteer is based on state or local definitions." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_11,
                "Organizational Type",
                Optional.of(
                        "The organizational structure from which EMS services are delivered (fire, hospital, county, etc.)" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_12,
                "EMS Agency Organizational Tax Status",
                Optional.of( "The EMS Agencies business/corporate organizational tax status" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_13,
                "Statistical Calendar Year",
                Optional.of(
                        "The calendar year to which the information pertains for the EMS Agency and the specific EMS Agency Number (dAgency.02)." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_14,
                "Total Primary Service Area Size",
                Optional.of( "The total square miles in the agency's service area." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_15,
                "Total Service Area Population",
                Optional.of(
                        "The total population in the agency's service area based if possible on year 2010 census data." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_16,
                "911 EMS Call Center Volume per Year",
                Optional.of( "The number of 911 EMS called per year based on last calendar year." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_17,
                "EMS Dispatch Volume per Year",
                Optional.of( "The number of EMS dispatches per year based on last calendar year." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_18,
                "EMS Patient Transport Volume per Year",
                Optional.of( "The number of EMS transports per year based on last calendar year." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_19,
                "EMS Patient Contact Volume per Year",
                Optional.of( "The number of EMS patient contacts per year based on last calendar year." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_20,
                "EMS Agency Time Zone",
                Optional.of( "The time zone for the EMS Agency." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_21,
                "National Provider Identifier",
                Optional.of(
                        "The National Provider Identifier associated with National Provider System (NPS) and used in all standard HIPPA transactions such as electronic claim filing." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_22,
                "Fire Department ID Number",
                Optional.of(
                        "The state assigned Fire Department ID Number for EMS Agency(s) operating within a Fire Department." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_23,
                "State Associated with the Certification/Licensure Levels",
                Optional.of( "The state associated with the state certification/licensure levels." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_24,
                "State Certification Licensure Levels",
                Optional.of(
                        "All of the potential levels of certification/licensure for EMS personnel recognized by the state." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_25,
                "Procedures Permitted by the State",
                Optional.of( "A list of all of the procedures permitted by the EMS Agency's licensing state." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_26,
                "Medications Permitted by the State",
                Optional.of(
                        "A list of all of the medications permitted by the state to be used by each EMS state certification/licensure level." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_27,
                "Protocols Permitted by the State",
                Optional.of( "A list of all of the protocols permitted by the state." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_28,
                "EMS Certification Levels Permitted to Perform Each Procedure",
                Optional.of(
                        "EMS certification levels which are permitted to perform the procedure listed in dConfiguration.07." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_29,
                "EMS Agency Procedures",
                Optional.of(
                        "A list of all procedures that the agency has implemented and available for use by any/all EMS certification levels." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_30,
                "EMS Certification Level Permitted to Administer Each Medication",
                Optional.of(
                        "All EMS certification levels which are permitted to administer the medications listed in dConfiguration.09 (EMS Agency Medications)." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_31,
                "EMS Agency Medications",
                Optional.of( "A list of all medications the agency has implemented and have available for use." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_32,
                "EMS Agency Protocols",
                Optional.of(
                        "A list of all of the EMS field protocols that the agency has in place and available for use." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_33,
                "EMS Agency Specialty Service Capability",
                Optional.of(
                        "Special training or services provided by the EMS Agency and available to the EMS service area/community." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_34,
                "Emergency Medical Dispatch (EMD) Provided to EMS Agency Service Area",
                Optional.of(
                        "Indication as to whether Emergency Medical Dispatch is provided to the EMS Agency's service area." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_35,
                "Patient Monitoring Capability(s)",
                Optional.of(
                        "The EMS Agency's patient monitoring capability which can be provided to any/all patients presenting to EMS." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_36,
                "Crew Call Sign",
                Optional.of(
                        "The EMS crew call sign used to dispatch and communicate with the unit.  This may be the same as the EMS Unit/Vehicle Number in many agencies." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );

        // PII
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_37,
                "Agency Contact Last Name",
                Optional.of( "The Last Name of the agency's primary contact." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( true ),
                Optional.of( Analyzer.METAPHONE ) ) );

        // NON PII
        edm.createPropertyType( new PropertyType( Optional.absent(),
                DEM_38,
                "Agency Contact ZIP Code",
                Optional.of( "The ZIP code of the Agency's contact's mailing address." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_01,
                "Airway Device Placement Confirmed Method",
                Optional.of( "The method used to confirm the airway device placement." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_02,
                "Cardiac Arrest",
                Optional.of( "Indication of the presence of a cardiac arrest at any time." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_03,
                "Cardiac Arrest Etiology",
                Optional.of(
                        "Indication of the etiology or cause of the cardiac arrest (classified as cardiac, non-cardiac, etc.)" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_04,
                "Resuscitation Attempted By EMS",
                Optional.of(
                        "Indication of an attempt to resuscitate the patient who is in cardiac arrest (attempted, not attempted due to DNR, etc.)" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_05,
                "Arrest Witnessed By",
                Optional.of( "Indication of who the cardiac arrest was witnessed by" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );

        // NON PII
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_06,
                "CPR Care Provided Prior to EMS Arrival",
                Optional.of( "Documentation of the CPR provided prior to EMS arrival" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_07,
                "AED Use Prior to EMS Arrival",
                Optional.of( "Documentation of AED use Prior to EMS Arrival" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_08,
                "Type of CPR Provided",
                Optional.of( "Documentation of the type/technique of CPR used by EMS." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_09,
                "Therapeutic Hypothermia Initiated",
                Optional.of( "Documentation of EMS initiation of Therapeutic Hypothermia." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_10,
                "First Monitored Arrest Rhythm of the Patient",
                Optional.of( "Documentation of what the first monitored arrest rhythm which was noted" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_11,
                "Any Return of Spontaneous Circulation",
                Optional.of( "Indication whether or not there was any return of spontaneous circulation." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_12,
                "Date/Time of Cardiac Arrest",
                Optional.of( "The date/time of the cardiac arrest (if not known, please estimate)." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_13,
                "Date/Time Resuscitation Discontinued",
                Optional.of( "The date/time the CPR was discontinued (or could be time of death)" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_14,
                "Reason CPR/Resuscitation Discontinued",
                Optional.of( "The reason that CPR or the resuscitation efforts were discontinued." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_15,
                "Cardiac Rhythm on Arrival at Destination",
                Optional.of( "The patient's cardiac rhythm upon delivery or transfer to the destination" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_16,
                "End of EMS Cardiac Arrest Event",
                Optional.of( "The patient's outcome at the end of the EMS event." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_17,
                "Crew Member ID",
                Optional.of( "The state certification/licensure ID number assigned to the crew member." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_18,
                "Crew Member Level",
                Optional.of( "The functioning level of the crew member ID during this EMS patient encounter." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_19,
                "Complaint Reported by Dispatch",
                Optional.of( "The complaint dispatch reported to the responding unit." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_20,
                "EMD Performed",
                Optional.of( "Indication of whether Emergency Medical Dispatch was performed for this EMS event." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_21,
                "Destination/Transferred To, Name",
                Optional.of( "The destination the patient was delivered or transferred to." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_22,
                "Destination/Transferred To, Code",
                Optional.of( "The code of the destination the patient was delivered or transferred to." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_23,
                "Destination State",
                Optional.of( "The state of the destination the patient was delivered or transferred to." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_24,
                "Destination County",
                Optional.of( "The destination county in which  the patient was delivered or transferred to." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_25,
                "Destination ZIP Code",
                Optional.of( "The destination ZIP code in which the patient was delivered or transferred to." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_26,
                "Incident/Patient Disposition",
                Optional.of( "Type of disposition treatment and/or transport of the patient by this EMS Unit." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_27,
                "EMS Transport Method",
                Optional.of( "Transport method by this EMS Unit." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_28,
                "Transport Mode from Scene",
                Optional.of( "Indication whether the transport was emergent or non-emergent." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_29,
                "Additional Transport Mode Descriptors",
                Optional.of( "The documentation of transport mode techniques for this EMS response." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_30,
                "Condition of Patient at Destination",
                Optional.of( "The condition of the patient after care by EMS" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_31,
                "Reason for Choosing Destination",
                Optional.of( "The reason the unit chose to deliver or transfer the patient to the destination" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_32,
                "Type of Destination",
                Optional.of( "The type of destination the patient was delivered or transferred to" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_33,
                "Hospital In-Patient Destination",
                Optional.of(
                        "The location within the hospital that the patient was taken directly by EMS (e.g. Cath Lab, ICU, etc.)" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_34,
                "Hospital Designation",
                Optional.of(
                        "The designation associated with the hospital for this transport(e.g. Trauma, STEMI, Peds, etc)" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_35,
                "Destination Team Pre-Arrival Activation",
                Optional.of(
                        "Activation of the Destination Healthcare Facility Team prior to EMS arrival for acute ill or injured patient." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_36,
                "Date/Time of Destination Prearrival Activation",
                Optional.of(
                        "Date/Time EMS Notified/Activated the Destination Healthcare Facility Team prior to EMS arrival for acute ill or injured patient." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_37,
                "Date/Time of Assessment",
                Optional.of( "The date/time of the assessment" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_38,
                "Skin Assessment",
                Optional.of( "The assessment findings associated with the patient's skin." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_39,
                "Head Assessment",
                Optional.of( "The assessment findings associated with the patient's head." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_40,
                "Face Assessment",
                Optional.of( "The assessment findings associated with the patient's face." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_41,
                "Neck Assessment",
                Optional.of( "The assessment findings associated with the patient's neck." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_42,
                "Chest/Lungs Assessment",
                Optional.of( "The assessment findings associated with the patient's chest/lungs." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_43,
                "Heart Assessment",
                Optional.of( "The assessment findings associated with the patient's heart." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_44,
                "Abdominal Assessment Finding Location",
                Optional.of( "The location of the patient's abdomen assessment findings." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_45,
                "Abdomen Assessment",
                Optional.of( "The assessment findings associated with the patient's abdomen." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_46,
                "Pelvis/Genitourinary Assessment",
                Optional.of( "The assessment findings associated with the patient's pelvis/genitourinary." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_47,
                "Back and Spine Assessment Finding Location",
                Optional.of( "The location of the patient's back and spine assessment findings." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_48,
                "Back and Spine Assessment",
                Optional.of(
                        "The assessment findings associated with the patient's spine (Cervical, Thoracic, Lumbar, and Sacral) and back exam." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_49,
                "Extremity Assessment Finding Location",
                Optional.of( "The location of the patient's extremity assessment findings." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_50,
                "Extremities Assessment",
                Optional.of( "The assessment findings associated with the patient's extremities." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_51,
                "Eye Assessment Finding Location",
                Optional.of( "The location of the patient's eye assessment findings." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_52,
                "Eye Assessment",
                Optional.of( "The assessment findings of the patient's eye examination." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_53,
                "Mental Status Assessment",
                Optional.of( "The assessment findings of the patient's mental status examination." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_54,
                "Neurological Assessment",
                Optional.of( "The assessment findings of the patient's neurological examination." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_55,
                "Barriers to Patient Care",
                Optional.of(
                        "Indication of whether or not there were any patient specific barriers to serving the patient at the scene" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_56,
                "Alcohol/Drug Use Indicators",
                Optional.of(
                        "Indicators for the potential use of alcohol or drugs by the patient related to the patient's current illness or injury." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_57,
                "Cause of Injury",
                Optional.of( "The category of the reported/suspected external cause of the injury." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_58,
                "Trauma Center Criteria",
                Optional.of(
                        "Field Triage Criteria for transport to a trauma center as defined by the Centers for Disease Control and Prevention and the American College of Surgeons-Committee on Trauma." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_59,
                "Vehicular, Pedestrian, or Other Injury Risk Factor",
                Optional.of( "The kind of risk factor predictors present at the incident" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_60,
                "Main Area of the Vehicle Impacted by the Collision",
                Optional.of( "The area or location of initial impact on the vehicle based on 12-point clock diagram." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_61,
                "Location of Patient in Vehicle",
                Optional.of(
                        "The seat row location of the vehicle at the time of the crash with the front seat numbered as 1" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_62,
                "Use of Occupant Safety Equipment",
                Optional.of( "Safety equipment in use by the patient at the time of the injury" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_63,
                "Airbag Deployment",
                Optional.of( "Indication of Airbag Deployment" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_64,
                "Height of Fall (feet)",
                Optional.of(
                        "The distance in feet the patient fell, measured from the lowest point of the patient to the ground" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_65,
                "Date/Time Medication Administered",
                Optional.of( "The date/time medication administered to the patient" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_66,
                "Medication Administered Prior to this Units EMS Care",
                Optional.of(
                        "Indicates that the medication administration which is documented was administered prior to this EMS units care" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_67,
                "Medication Given",
                Optional.of( "The medication given to the patient" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_68,
                "Medication Dosage",
                Optional.of( "The dose or amount of the medication given to the patient" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Double,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_69,
                "Medication Dosage Units",
                Optional.of( "The unit of medication dosage given to patient" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_70,
                "Response to Medication",
                Optional.of( "The patient's response to the medication" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_71,
                "Medication Complication",
                Optional.of(
                        "Any complication (abnormal effect on the patient) associated with the administration of the medication to the patient by EMS" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_72,
                "Medication Crew (Healthcare Professionals) ID",
                Optional.of(
                        "The statewide assigned ID number of the EMS crew member giving the treatment to the patient" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_73,
                "Role/Type of Person Administering Medication",
                Optional.of(
                        "The type (level) of EMS or Healthcare Professional Administering the Medication. For medications administered prior to EMS arrival, this may be a non-EMS healthcare professional." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_74,
                "Suspected EMS Work Related Exposure, Injury, or Death",
                Optional.of(
                        "Indication of an EMS work related exposure, injury, or death associated with this EMS event." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_75,
                "Emergency Department Disposition",
                Optional.of( "The known disposition of the patient from the Emergency Department (ED)" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_76,
                "Hospital Disposition",
                Optional.of( "The known disposition of the patient from the hospital, if admitted." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );

        // PII
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_77,
                "Last Name",
                Optional.of( "The patient's last (family) name" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( true ),
                Optional.of( Analyzer.METAPHONE ) ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_78,
                "First Name",
                Optional.of( "The patient's first (given) name" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( true ),
                Optional.of( Analyzer.METAPHONE ) ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_79,
                "Patient's Home Address",
                Optional.of( "The patient's home mailing or street address" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( true ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_80,
                "Patient's Home City",
                Optional.of( "The patient's home city or township or residence" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( true ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_81,
                "Patient's Home County",
                Optional.of( "The patient's home county or parish or residence" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( true ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_82,
                "Patient's Home State",
                Optional.of(
                        "The patient's home state, territory, or province, or District of Columbia, where the patient resides." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( true ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_83,
                "Patient's Home ZIP Code",
                Optional.of( "The patient's home ZIP code of residence" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( true ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_84,
                "Social Security Number",
                Optional.of( "The patient's social security number" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( true ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_85,
                "Gender",
                Optional.of( "The Patient's Gender" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( true ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_86,
                "Race",
                Optional.of( "The patient's race as defined by the OMB (US Office of Management and Budget)" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( true ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_87,
                "Age",
                Optional.of( "The patient's age (either calculated from date of birth or best approximation)" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( true ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_88,
                "Age Units",
                Optional.of( "The unit used to define the patient's age" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( true ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_89,
                "Date of Birth",
                Optional.of( "The patient's date of birth" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( true ),
                Optional.absent() ) );

        // NON PII
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_90,
                "Primary Method of Payment",
                Optional.of( "The primary method of payment or type of insurance associated with this EMS encounter" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_91,
                "CMS Service Level",
                Optional.of( "The CMS service level for this EMS encounter." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_92,
                "EMS Condition Code",
                Optional.of( "The condition code associated with the CMS EMS negotiated rule-making process." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_93,
                "Date/Time Procedure Performed",
                Optional.of( "The date/time the procedure was performed on the patient" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_94,
                "Procedure Performed Prior to this Units EMS Care",
                Optional.of(
                        "Indicates that the procedure which was performed and documented was performed prior to this EMS units care." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_95,
                "Procedure",
                Optional.of( "The procedure performed on the patient." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_96,
                "Number of Procedure Attempts",
                Optional.of(
                        "The number of attempts taken to complete a procedure or intervention regardless of success." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_97,
                "Procedure Successful",
                Optional.of( "Indicates that this procedure attempt which was performed on the patient was successful" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_98,
                "Procedure Complication",
                Optional.of(
                        "Any complication (abnormal effect on the patient) associated with the performance of the procedure on the patient" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_99,
                "Response to Procedure",
                Optional.of( "The patient's response to the procedure" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_100,
                "Procedure Crew Members ID",
                Optional.of(
                        "The statewide assigned ID number of the EMS crew member performing the procedure on the patient" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_101,
                "Role/Type of Person Performing the Procedure",
                Optional.of(
                        "The type (level) of EMS or Healthcare Professional performing the procedure. For procedures performed prior to EMS arrival, this may be a non-EMS healthcare professional." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_102,
                "Protocols Used",
                Optional.of( "The protocol used by EMS personnel to direct the clinical care of the patient" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_103,
                "Protocol Age Category",
                Optional.of( "The age group the protocol is written to address" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_104,
                "Patient Care Report Number",
                Optional.of(
                        "The unique number automatically assigned by the EMS agency for each Patient Care Report (PCR). This should be a unique number for the EMS agency for all of time." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_105,
                "Software Creator",
                Optional.of(
                        "The name of the vendor, manufacturer, and developer who designed the application that created this record." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_106,
                "Software Name",
                Optional.of( "The name of the application used to create this record." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_107,
                "Software Version",
                Optional.of( "The version of the application used to create this record." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_108,
                "EMS Agency Number",
                Optional.of( "The state-assigned provider number of the responding agency" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_109,
                "Incident Number",
                Optional.of( "The incident number assigned by the 911 Dispatch System" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_110,
                "EMS Response Number",
                Optional.of(
                        "The internal EMS response number which is unique for each EMS Vehicle's (Unit) response to an incident within an EMS Agency." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_111,
                "Type of Service Requested",
                Optional.of(
                        "The type of service or category of service requested of the EMS Agency responding for this specific EMS event" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_112,
                "Primary Role of the Unit",
                Optional.of( "The Primary role of the EMS Unit which responded to this specific EMS event" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_113,
                "Type of Dispatch Delay",
                Optional.of(
                        "The dispatch delays, if any, associated with the dispatch of the EMS unit to the EMS event." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_114,
                "Type of Response Delay",
                Optional.of( "The response delays, if any, of the EMS unit associated with the EMS event." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_115,
                "Type of Scene Delay",
                Optional.of( "The scene delays, if any, of the EMS unit associated with the EMS event." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_116,
                "Type of Transport Delay",
                Optional.of( "The transport delays, if any, of the EMS unit associated with the EMS event." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_117,
                "Type of Turn-Around Delay",
                Optional.of( "The turn-around delays, if any, of EMS unit associated with the EMS event." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_118,
                "EMS Vehicle (Unit) Number",
                Optional.of( "The unique physical vehicle number of the responding unit." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_119,
                "EMS Unit Call Sign",
                Optional.of(
                        "The EMS unit number used to dispatch and communicate with the unit. This may be the same as the EMS Unit/Vehicle Number in many agencies." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_120,
                "Level of Care of This Unit",
                Optional.of(
                        "The level of care (BLS or ALS) the unit is able to provide based on the units’ treatment capabilities for this EMS response." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_121,
                "Response Mode to Scene",
                Optional.of(
                        "The indication whether the response was emergent or non-emergent. An emergent response is an immediate response (typically using lights and sirens)." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_122,
                "Additional Response Mode Descriptors",
                Optional.of( "The documentation of response mode techniques used for this EMS response." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_123,
                "First EMS Unit on Scene",
                Optional.of( "Documentation that this EMS Unit was the first EMS Unit for the EMS Agency on the Scene" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_124,
                "Number of Patients at Scene",
                Optional.of( "Indicator of how many total patients were at the scene" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_125,
                "Mass Casualty Incident",
                Optional.of(
                        "Indicator if this event would be considered a mass casualty incident (overwhelmed existing EMS resources)" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_126,
                "Triage Classification for MCI Patient",
                Optional.of(
                        "The color associated with the initial triage assessment/classification of the MCI patient." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_127,
                "Incident Location Type",
                Optional.of( "The kind of location where the incident happened" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );

        // PII?
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_128,
                "Scene GPS Location",
                Optional.of( "The GPS coordinates associated with the Scene." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.GeographyPoint,
                Optional.of( true ),
                Optional.absent() ) );

        // PII?
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_129,
                "Incident Street Address",
                Optional.of(
                        "“The street address where the patient was found, or, if no patient, the address to which the unit responded.”" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( true ),
                Optional.absent() ) );

        // NON PII
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_130,
                "Incident City",
                Optional.of(
                        "The city or township (if applicable) where the patient was found or to which the unit responded (or best approximation)" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_131,
                "Incident State",
                Optional.of(
                        "The state, territory, or province where the patient was found or to which the unit responded (or best approximation)" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_132,
                "Incident ZIP Code",
                Optional.of( "The ZIP code of the incident location" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_133,
                "Incident County",
                Optional.of(
                        "The county or parish where the patient was found or to which the unit responded (or best approximation)" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );

        // NON PII
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_134,
                "Date/Time of Symptom Onset/Last Normal",
                Optional.of(
                        "The date and time the symptom began as it relates to this EMS event. This is described or estimated by the patient, family, and/or healthcare professionals." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_135,
                "Possible Injury",
                Optional.of( "Indication whether or not there was an injury" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_136,
                "Chief Complaint Anatomic Location",
                Optional.of( "The primary anatomic location of the chief complaint as identified by EMS personnel" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_137,
                "Chief Complaint Organ System",
                Optional.of( "The primary organ system of the patient injured or medically affected." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_138,
                "Primary Symptom",
                Optional.of( "The primary sign and symptom present in the patient or observed by EMS personnel" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_139,
                "Other Associated Symptoms",
                Optional.of( "Other symptoms identified by the patient or observed by EMS personnel" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_140,
                "Provider's Primary Impression",
                Optional.of(
                        "The EMS personnel's impression of the patient's primary problem or most significant condition which led to the management given to the patient (treatments, medications, or procedures)." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_141,
                "Provider's Secondary Impressions",
                Optional.of(
                        "The EMS personnel's impression of the patient's secondary problem or most significant condition which led to the management given to the patient (treatments, medications, or procedures)." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_142,
                "Initial Patient Acuity",
                Optional.of( "The acuity of the patient’s condition upon EMS arrival at the scene." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_143,
                "PSAP Call Date/Time",
                Optional.of(
                        "The date/time the phone rings (911 call to public safety answering point or other designated entity) requesting EMS services." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_144,
                "Unit Notified by Dispatch Date/Time",
                Optional.of( "The date/time the responding unit was notified by dispatch." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_145,
                "Unit En Route Date/Time",
                Optional.of( "The date/time the unit responded; that is, the time the vehicle started moving." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_146,
                "Unit Arrived on Scene Date/Time",
                Optional.of(
                        "The date/time the responding unit arrived on the scene; that is, the time the vehicle stopped moving at the scene." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_147,
                "Arrived at Patient Date/Time",
                Optional.of( "The date/time the responding unit arrived at the patient's side." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_148,
                "Unit Left Scene Date/Time",
                Optional.of( "The date/time the responding unit left the scene with a patient (started moving)." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_149,
                "Patient Arrived at Destination Date/Time",
                Optional.of(
                        "The date/time the responding unit arrived with the patient at the destination or transfer point." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_150,
                "Destination Patient Transfer of Care Date/Time",
                Optional.of(
                        "The date/time that patient care was transferred to the destination healthcare facilities staff." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_151,
                "Unit Back in Service Date/Time",
                Optional.of(
                        "The date/time the unit back was back in service and available for response (finished with call, but not necessarily back in home location)." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_152,
                "Unit Back at Home Location Date/Time",
                Optional.of(
                        "The date/time the responding unit was back in their service area. With agencies who utilized Agency Status Management, home location means the service area as assigned through the agency status management protocol." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_153,
                "Date/Time Vital Signs Taken",
                Optional.of( "The date/time vital signs were taken on the patient." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Date,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_154,
                "Obtained Prior to this Units EMS Care",
                Optional.of(
                        "Indicates that the information which is documented was obtained prior to the documenting EMS units care." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_155,
                "Cardiac Rhythm / Electrocardiography (ECG)",
                Optional.of(
                        "The cardiac rhythm / ECG and other electrocardiography findings of the patient as interpreted by EMS personnel." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_156,
                "ECG Type",
                Optional.of( "The type of ECG associated with the cardiac rhythm." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_157,
                "Method of ECG Interpretation",
                Optional.of( "The method of ECG interpretation." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_158,
                "SBP (Systolic Blood Pressure)",
                Optional.of( "The patient's systolic blood pressure." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_159,
                "DBP (Diastolic Blood Pressure)",
                Optional.of( "The patient's diastolic blood pressure." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_160,
                "Method of Blood Pressure Measurement",
                Optional.of( "Indication of method of blood pressure measurement." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_161,
                "Heart Rate",
                Optional.of( "The patient's heart rate expressed as a number per minute." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_162,
                "Pulse Oximetry",
                Optional.of( "The patient's oxygen saturation." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_163,
                "Respiratory Rate",
                Optional.of( "The patient's respiratory rate expressed as a number per minute." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_164,
                "Carbon Dioxide (CO2)",
                Optional.of( "The patient's end-tidal or other CO2 level." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_165,
                "Blood Glucose Level",
                Optional.of( "The patient's blood glucose level." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_166,
                "Glasgow Coma Score-Eye",
                Optional.of( "The patient's Glasgow Coma Score Eye opening." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_167,
                "Glasgow Coma Score-Verbal",
                Optional.of( "The patient's Glasgow Coma Score Verbal." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_168,
                "Glasgow Coma Score-Motor",
                Optional.of( "The patient's Glasgow Coma Score Motor" ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_169,
                "Glasgow Coma Score-Qualifier",
                Optional.of( "Documentation of factors which make the GCS score more meaningful." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_170,
                "Level of Responsiveness (AVPU)",
                Optional.of( "The patient's highest level of responsiveness." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_171,
                "Pain Score",
                Optional.of( "The patient's indication of pain from a scale of 0-10." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.Int64,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_172,
                "Stroke Scale Score",
                Optional.of( "The patient's Stroke Scale Results." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_173,
                "Stroke Scale Type",
                Optional.of( "The type of stroke pain scale used." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
        edm.createPropertyType( new PropertyType( Optional.absent(),
                EMS_174,
                "Reperfusion Checklist",
                Optional.of( "The results of the patient's Reperfusion Checklist for potential Thrombolysis use." ),
                ImmutableSet.of(),
                EdmPrimitiveTypeKind.String,
                Optional.of( false ),
                Optional.absent() ) );
    }

    // CUSTOM FUNCTIONS DEFINED BELOW
}
